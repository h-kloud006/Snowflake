
jobs:
  - job: dryrun_qa
    displayName: "DRYRUN-QA"
    variables:
      - group: snowflake-variables-qa
  
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.8'
      inputs:
        versionSpec: '3.8'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo 'Starting bash task'
          echo "PROJECT_FOLDER $(PROJECT_FOLDER)"
          python --version
          echo 'Step 1: Installing schemachange'
          pip install schemachange --upgrade
          echo 'Step 2: Running schemachange'
          schemachange -f $(PROJECT_FOLDER)/migrations -a $(SF_ACCOUNT) --vars $(ENV_VARIABLES) -u $(SF_USERNAME) -r $(SF_ROLE) -w $(SF_WAREHOUSE) -d $(SF_DATABASE) -c $(SF_DATABASE).SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table --dry-run
      env:
        SNOWFLAKE_PASSWORD: $(SF_PASSWORD)    

  - job: dryrun_prod
    displayName: "DRYRUN-PROD"
    variables:
      - group: snowflake-variables-prod
      
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.8'
      inputs:
        versionSpec: '3.8'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo 'Starting bash task'
          echo "PROJECT_FOLDER $(PROJECT_FOLDER)"
          python --version
          echo 'Step 1: Installing schemachange'
          pip install schemachange --upgrade
          echo 'Step 2: Running schemachange'
          schemachange -f $(PROJECT_FOLDER)/migrations -a $(SF_ACCOUNT) --vars $(ENV_VARIABLES) -u $(SF_USERNAME) -r $(SF_ROLE) -w $(SF_WAREHOUSE) -d $(SF_DATABASE) -c $(SF_DATABASE).SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table --dry-run
      env:
        SNOWFLAKE_PASSWORD: $(SF_PASSWORD)